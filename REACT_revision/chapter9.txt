CUSTOM HOOKS
-> Utility functions we create.
-> To increase Modularity
-> Increases Readability
-> Makes it more Readable
-> It is recommended to write "use" in front of custom Hooks

If you have a custom fetch hook that utilizes useEffect internally, React ensures that the useEffect inside your custom hook is called only after the component using the hook has been fully rendered. This is because hooks are called in the order they appear in your component's function body, and they always run after every render.

```
const [s1,setS1] = useState([GG])
const [s2,setS2] = useState(s1)
setS1({abvc}) -->   ONLY S1 CHANGES NOT S2
``` 
In React, when you initialize one state variable with the value of another state variable, the initialized state variable will only hold the initial value of the other state variable. It will not automatically update when the other state variable changes.

POSTCSS is a way for our PROJECT to understand Tailwind

During Bundling for production only the tailwind classes used by our code will be loaded by tailwind.
This makes tailwind very very lightweight. (it never ships unused CSS)
